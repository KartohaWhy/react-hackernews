{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","PATH_BASE","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","App","props","_isMounted","state","results","searchKey","searchTerm","error","isLoading","needsToSearchTopStories","bind","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","this","result","hits","page","setState","prevState","oldHits","updatedHits","updateSearchTopStoriesState","axios","then","data","catch","event","target","value","preventDefault","id","filter","item","objectID","className","onChange","onSubmit","ButtonWithLoading","onClick","Search","input","focus","children","type","ref","node","Table","sortKey","isSortReverse","onSort","sortedList","reverseSortedList","style","width","activeSortKey","map","key","href","url","title","author","num_comments","points","Sort","sortClass","classNames","Button","Loading","class","rest","defaultProps","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd98cb97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bf5a18f8.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport axios from 'axios';\nimport { sortBy } from 'lodash';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\n\nconst DEFAULT_QUERY= '';\nconst DEFAULT_HPP='20';\n//const DEFAULT_TAG='story';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\n//const PARAM_TAGS = 'tags='  &${PARAM_TAGS}${DEFAULT_TAG}\nconst PARAM_PAGE='page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\n\n\n\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list,'title'),\n  AUTHOR: list => sortBy(list,'author'),\n  COMMENTS: list => sortBy(list,'num_comments').reverse(),\n  POINTS: list => sortBy(list,'points').reverse(),\n}\n\nconst updateSearchTopStoriesState = (hits, page) => (prevState) => {\n  const { searchKey, results } = prevState;\n  const oldHits = results && results[searchKey]\n  ? results[searchKey].hits\n  : [];\n  const updatedHits = [\n  ...oldHits,\n  ...hits\n  ];\n  return {\n  results: {\n  ...results,\n  [searchKey]: { hits: updatedHits, page }\n  },\n  isLoading: false\n  };\n  };\n\n\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props){\n    super(props);\n\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false,\n      \n      \n    };\n\n  \n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    \n  }\n\n  needsToSearchTopStories(searchTerm){\n        return !this.state.results[searchTerm];\n  }\n   setSearchTopStories(result) {\n     const { hits, page } = result;\n    this.setState(updateSearchTopStoriesState(hits,page))\n   }\n     \n\n   fetchSearchTopStories(searchTerm, page=0){\n     this.setState({ isLoading: true });\n\n     axios(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n     .then(result => this._isMounted && this.setSearchTopStories(result.data))\n     .catch(error => this._isMounted && this.setState({ error }));\n   }\n   \n\n   \n   componentDidMount() {\n     this._isMounted = true;\n\n     const { searchTerm } = this.state;\n     this.setState({ searchKey: searchTerm });\n     this.fetchSearchTopStories(searchTerm);\n    }\n    componentWillUnmount(){\n      this._isMounted = false;\n    }\n\n\n    \n  \n\n  \n\n \n\n  \n\n  onSearchChange(event){\n        this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n    this.fetchSearchTopStories(searchTerm);\n    }\n    event.preventDefault();\n  }\n\n  onDismiss(id){\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n     this.setState({ \n       results: { \n         ...results,\n         [searchKey]:  { hits: updatedHits, page } \n        }\n      });  \n     \n  }\n\n  \n  \n\n  render(){\n \n    const {\n      searchTerm, \n      results,\n      searchKey,\n      error,\n      isLoading,\n    } = this.state;\n    const page = (\n      results && \n      results[searchKey] &&\n      results[searchKey].page\n      ) || 0;\n\n      const list = (\n        results && \n        results[searchKey] &&\n        results[searchKey].hits\n        ) || [];\n\n        \n    \n    return (\n      \n      <div className = \"page\">\n        <div className =\"interactions\">\n\n        \n       \n        <Search \n        value ={searchTerm}\n        onChange={this.onSearchChange}\n        onSubmit={this.onSearchSubmit}\n        > \n        Ищу\n        </Search>\n        </div>\n        \n        { error\n          ? <div className=\"interactions\">\n            <p>Что-то пошло не так.</p>\n            </div>\n            : <Table\n            list={list}\n            onDismiss={this.onDismiss}\n            />\n        }\n        \n        <div className=\"interactions\">\n         <ButtonWithLoading\n        isLoading={isLoading}\n       onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\n       > \n       Больше историй\n       </ButtonWithLoading>\n        </div>\n           </div>\n          \n    ); \n  }\n}\n\nclass Search extends Component {\n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render(){\nconst {\n  value,\n  onChange,\n  onSubmit,\n  children \n} = this.props;\n\nreturn (\n<form onSubmit={onSubmit}>\n  <input \n  type=\"text\"\n  value={value}\n  onChange={onChange}\n  ref={(node) => { this.input = node; }}\n  />\n  <button type=\"submit\">\n    {children}\n  </button>\n</form>\n);\n  }\n}\n\nSearch.propTypes ={\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired ,\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n}\n   \n\n\n\n\n\n\n\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false,\n    };\n\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onSort(sortKey) {\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render() {\n    const {\n      list,\n      onDismiss, \n    } = this.props;\n    \n    const { \n      sortKey,\n      isSortReverse,\n      \n    } = this.state;\n\n    const sortedList = SORTS[sortKey](list);\nconst reverseSortedList = isSortReverse\n? sortedList.reverse()\n: sortedList;\n\nreturn(\n  <div className=\"table\">\n  <div className=\"table-header\"> \n  <span style={{ width: '40%' }}>\n    <Sort \n    sortKey={'TITLE'}\n    onSort={this.onSort}\n    activeSortKey={sortKey}\n    >\n      Заголовок\n    </Sort>\n    </span>\n    <span style={{ width:'30%'}}> \n    <Sort \n    sortKey={'AUTHOR'}\n    onSort={this.onSort}\n    activeSortKey={sortKey}\n    >\n      Автор\n    </Sort>\n    </span>\n    <span style={{ width:'10%'}}> \n    <Sort \n    sortKey={'COMMENTS'}\n    onSort={this.onSort}\n    activeSortKey={sortKey}\n    >\n      Комментарии\n    </Sort>\n    </span>\n    <span style={{ width:'10%'}}> \n    <Sort \n    sortKey={'POINTS'}\n    onSort={this.onSort}\n    activeSortKey={sortKey}\n    >\n      Очки\n    </Sort>\n    </span>\n    <span style={{ width: '10%' }}> \n    Архив\n    </span>\n  </div>\n  \n  {reverseSortedList.map(item => \n  \n  <div key={item.objectID} className=\"table-row\">\n  <span style={{ width: '40%'}}>\n  <a href={item.url}>{item.title}</a>\n  </span>\n  <span style={{ width: '30%'}}>\n    {item.author}\n  </span>\n  <span style={{ width: '10%'}}>\n    {item.num_comments}\n    </span>\n  <span style={{ width: '10%'}}>\n    {item.points}\n    </span>\n  <span style={{ width: '10%'}}>\n  <Button \n  onClick={() => onDismiss(item.objectID)}\n  className=\"button-inline\"\n  > \n  Отбросить\n  </Button>\n  </span>\n  </div>\n  )}\n  </div>\n  );\n  }\n\n  }\n\n  Table.propTypes = {\n    list: PropTypes.arrayOf(\n      PropTypes.shape({\n        objectID: PropTypes.string.isRequired,\n        author: PropTypes.string,\n        url: PropTypes.string,\n        num_comments: PropTypes.number,\n        points: PropTypes.number,\n      })\n    ).isRequired,\n    onDismiss: PropTypes.func.isRequired,\n  };\n\n\n  const Sort = ({ \n    sortKey, \n    activeSortKey,\n    isSortReverse,\n    onSort, \n    children \n  }) => {\n    const sortClass = classNames(\n      \n      'button-inline',\n      { \"fas fa-arrow-up\": isSortReverse = false & sortKey === activeSortKey,\n        \"fas fa-arrow-down\": sortKey === activeSortKey,\n       }\n    );\n  \n    return (\n  <Button \n  onClick={() => onSort(sortKey)}\n  className={sortClass}\n  >\n    {children}\n  </Button>\n  );\n  }\n\n\n  const Button = ({ \n    onClick, \n    className, \n    children\n  }) =>\n  \n  <button\n        onClick={onClick}\n        className={className}\n        type=\"button\"\n        > \n        {children}\n        </button>\n\nconst Loading = () =>\n<div>\n  <i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n<span class=\"sr-only\">Загрузка...</span>\n</div>\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\nisLoading\n? <Loading />\n: <Component { ...rest } />\n\nconst ButtonWithLoading = withLoading(Button);\n\n        Button.defaultProps = {\n          className: '',\n        };\n\n        Button.propTypes = {\n          onClick: PropTypes.func.isRequired,\n          className: PropTypes.string,\n          children: PropTypes.node.isRequired,\n        };\n\n\n\n        \nexport default App;\n\nexport {\n  Button,\n  Search,\n  Table,\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Foo from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*function tick() {\n  const element = (\n    <div>\n      \n      <h1>Сейчас {new Date().toLocaleTimeString()}.</h1>\n      <h2>А Ян Дектерёв всё ещё не продвинулся в Реакте за сегодня</h2>\n    </div>\n  );\n  ReactDOM.render(element, document.getElementById('root'));\n}\n\nsetInterval(tick, 1000);*/\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nif (module.hot) {\n  module.hot.accept();\n  }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}